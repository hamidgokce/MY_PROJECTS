AWSTemplateFormatVersion: 2010-09-09
Description: |
  CloudFormation Template for Phonebook Application. This template creates Application 
  Load Balancer with Auto Scaling Group of Amazon Linux 2 ( ami-0c2b8ca1dad447f8a) EC2 Instances 
  which host Python Flask Web Application. EC2 instances are placed within 
  WebServerSecurityGroup which allows http (80) connections only from ALBSecurityGroup, 
  and allows tcp(3306) connections only within itself. RDS DB instance is placed within 
  WebServerSecurityGroup so that Database Server can communicate with Web Servers. 
  Application Load Balancer is placed within ALBSecurityGroup which allows http (80) 
  connections from anywhere. WebServerASG Auto Scaling Group is using the WebServerLT 
  Launch Template in order to spin up instances needed. WebServerLT Launch Template is 
  configured to prepare Python Flask environment on EC2, and to deploy Phonebook 
  Application on Flask Server after downloading the app code from Github repository.

Parameters:
  MyVPC: #parametertypevpc seciyoruz
    Description: VPC Id of your existing account.
    Type: AWS::EC2::VPC::Id
  
  KeyName: #parameterkeynametype i seciyoruz
    Description: Please enter your valid Key pair.
    Type: AWS::EC2::KeyPair::KeyName

  Subnets: #parametertypesubnetlisti seciyoruz
    Description: Choose your subnets.
    Type: List<AWS::EC2::Subnet::Id>

Resources:
  ALBSecurityGroup: #ilk karsimiza cikan securitygrup tikliyoruz #iki tane secgrup olusturacvagiz birisi ALB
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP for ALB
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80 
          CidrIp: 0.0.0.0/0

  WebServerSecurityGroup: #ec2 icin secgrup olusturuyoruz
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP for Flask server and SSH for getting into EC2.
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp #elastic loadbalancer ile iletisim kursun istiyoruz o nedenle Cidrip yi kaldirip SourceSecgrupid ekliyoruz
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80 
          SourceSecurityGroupId: !GetAtt ALBSecurityGroup.GroupId #servisle iliskili oldugundan GEtAtt kullaniyoruz

  WebServerLT: #ec2launch template seciyrouz
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId:  ami-0c2b8ca1dad447f8a
        InstanceType: t2.micro
        KeyName: !Ref KeyName
        SecurityGroupIds:
          - !GetAtt WebServerSecurityGroup.GroupId
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub Web Server of ${AWS::StackName} Stack #olusan stack ismini verecegiz ordan cekecegi icin Sub fonksiyonu kullaniyoruz
        UserData: 
          Fn::Base64:
            !Sub 
              - |
                #! /bin/bash
                yum update -y
                yum install python3 -y
                pip3 install flask
                pip3 install flask_mysql
                echo "${MyDBURI}" > /home/ec2-user/dbserver.endpoint
                TOKEN="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"
                FOLDER="https://$TOKEN@raw.githubusercontent.com/ser-2007/private-my-projects/main/Project-004-Phonebook-Application/"
                curl -s --create-dirs -o "/home/ec2-user/templates/index.html" -L "$FOLDER"templates/index.html
                curl -s --create-dirs -o "/home/ec2-user/templates/add-update.html" -L "$FOLDER"templates/add-update.html
                curl -s --create-dirs -o "/home/ec2-user/templates/delete.html" -L "$FOLDER"templates/delete.html
                curl -s --create-dirs -o "/home/ec2-user/phonebook-app.py" -L "$FOLDER"phonebook-app.py
                python3 /home/ec2-user/phonebook-app.py
              - MyDBURI: !GetAtt MyDatabaseServer.Endpoint.Address

  WebServerTG: #elasticloadbalancerv2targetgroup u secegiz
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: instance
      UnhealthyThresholdCount: 3 #3 defa hata verirse unhealthy olarak isaretliyo
      HealthyThresholdCount: 2 # 2 defa olumlu cevap alisa instance a healty diyecek
      VpcId: !Ref MyVPC

  ApplicationLoadBalancer: #elasticloadbalancingv2 sececegiz
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt ALBSecurityGroup.GroupId #id sini isteyecegim icin gettatt ile istiyorum
      Subnets: !Ref Subnets #Parametreden cekersen ref kullaniyoruz kullanicinin girecegi bilgiyi cekiyoruz
      Type: application

  ALBListener: #ElasticLoadBalancingV2::Listener i seciyoruz
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required # listener kendisine gelenleri applicationloadbalancera forward edecek
        - TargetGroupArn: !Ref WebServerTG
          Type: forward
      LoadBalancerArn: !Ref ApplicationLoadBalancer # Required
      Port: 80
      Protocol: HTTP

  WebServerASG: #autoscalingroup yazip ilk karsimiza cikani seciyoruz
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
        !GetAZs ""
      DesiredCapacity: 2
      HealthCheckGracePeriod: 300
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref WebServerLT
        Version: !GetAtt WebServerLT.LatestVersionNumber
      MaxSize: 3 # Required
      MinSize: 1 # Required
      TargetGroupARNs:
        - !Ref WebServerTG

  MyDBSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      GroupDescription: Front-end access to RDS
      DBSecurityGroupIngress:
        - CIDRIP: 0.0.0.0/0
        - EC2SecurityGroupId: !GetAtt WebServerSecurityGroup.GroupId

  MyDatabaseServer: #rdsDBInstance seciyoruz
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete #isimiz bitince silinsin diye deletion policy ekliyoruz
    Properties:
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 0 #backup almasin diye 0 veriyoruz
      DBInstanceIdentifier: sersah #database e isim veriyoruz
      DBInstanceClass: db.t2.micro
      DBName: clarusway_phonebook
      DBSecurityGroups: 
        - !Ref MyDBSecurityGroup
      Engine: MySQL
      EngineVersion: 8.0.19
      MasterUsername: admin
      MasterUserPassword: Serdar_1
      Port: 3306
      PubliclyAccessible: true

Outputs:
  WebsiteURL:
    Value: !Sub 
      - http://${ALBAddress}
      - ALBAddress: !GetAtt ApplicationLoadBalancer.DNSName
    Description: Phonebook Application Load Balancer URL